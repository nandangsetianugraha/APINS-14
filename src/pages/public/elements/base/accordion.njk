{% extends "components/template.njk" %}

{% set page_title = "Accordion" %}
{% set breadcrumb = [
  { text: "Dashboard", link: "index.html" | url, icon: '<i data-feather="home"></i>' },
  { text: "Elements" },
  { text: "Base" },
  { text: "Accordion", link: "elements/base/accordion.html" | url }
] %}

{% block content %}
  <div class="row">
    <div class="col-12">

      <!-- BEGIN Portlet -->
      <div class="portlet">
        <div class="portlet-header portlet-header-bordered">
          <h3 class="portlet-title">Accordion</h3>
        </div>
        <div class="portlet-body">
          <p>The accordion uses collapse utility internally to make it collapsible. To render an accordion thatâ€™s expanded, add the <code>.open</code> class on the <code>.accordion</code>.</p>
          <p>Add <code>.accordion-flush</code> to remove the default <code>background-color</code>, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.</p>

          <!-- BEGIN Row -->
          <div class="row gy-3">
            <div class="col-sm-6">

              <!-- BEGIN Accordion -->
              <div class="accordion" id="accordion1">
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#accordion1-item1">
                      <div class="accordion-icon">
                        <i class="far fa-paper-plane"></i>
                      </div>
                      Accordion Item #1
                    </button>
                  </h2>
                  <div id="accordion1-item1" class="accordion-collapse collapse show" data-bs-parent="#accordion1">
                    <div class="accordion-body">
                      <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#accordion1-item2">
                      <div class="accordion-icon">
                        <i class="far fa-bookmark"></i>
                      </div>
                      Accordion Item #2
                    </button>
                  </h2>
                  <div id="accordion1-item2" class="accordion-collapse collapse" data-bs-parent="#accordion1">
                    <div class="accordion-body">
                      <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#accordion1-item3">
                      <div class="accordion-icon">
                        <i class="far fa-bell"></i>
                      </div>
                      Accordion Item #3
                    </button>
                  </h2>
                  <div id="accordion1-item3" class="accordion-collapse collapse" data-bs-parent="#accordion1">
                    <div class="accordion-body">
                      <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
              </div>
              <!-- END Accordion -->

            </div>
            <div class="col-sm-6">

              <!-- BEGIN Accordion -->
              <div class="accordion accordion-flush" id="accordion2">
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#accordion2-item1">
                      <div class="accordion-icon">
                        <i class="far fa-paper-plane"></i>
                      </div>
                      Accordion Item #1
                    </button>
                  </h2>
                  <div id="accordion2-item1" class="accordion-collapse collapse show" data-bs-parent="#accordion2">
                    <div class="accordion-body">
                      <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#accordion2-item2">
                      <div class="accordion-icon">
                        <i class="far fa-bookmark"></i>
                      </div>
                      Accordion Item #2
                    </button>
                  </h2>
                  <div id="accordion2-item2" class="accordion-collapse collapse" data-bs-parent="#accordion2">
                    <div class="accordion-body">
                      <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
                <div class="accordion-item">
                  <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#accordion2-item3">
                      <div class="accordion-icon">
                        <i class="far fa-bell"></i>
                      </div>
                      Accordion Item #3
                    </button>
                  </h2>
                  <div id="accordion2-item3" class="accordion-collapse collapse" data-bs-parent="#accordion2">
                    <div class="accordion-body">
                      <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                  </div>
                </div>
              </div>
              <!-- END Accordion -->

            </div>
          </div>
          <!-- END Row -->

        </div>
      </div>
      <!-- END Portlet -->

    </div>
  </div>
{% endblock %}
